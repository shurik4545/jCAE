Gain many time in pick color.

Additionnal information at http://www.vtk.org/Bug/view.php?id=7111
---

 Rendering/vtkOpenGLDisplayListPainter.cxx |   17 +++++++++++------
 Rendering/vtkPainter.cxx                  |    5 +++++
 Rendering/vtkPainter.h                    |   17 +++++++++++++++++
 Rendering/vtkRenderer.cxx                 |    2 ++
 Rendering/vtkRenderer.h                   |    2 ++
 5 files changed, 37 insertions(+), 6 deletions(-)


diff --git a/Rendering/vtkOpenGLDisplayListPainter.cxx b/Rendering/vtkOpenGLDisplayListPainter.cxx
index 8e74f04..08881ca 100644
--- a/Rendering/vtkOpenGLDisplayListPainter.cxx
+++ b/Rendering/vtkOpenGLDisplayListPainter.cxx
@@ -79,15 +79,21 @@ void vtkOpenGLDisplayListPainter::RenderInternal(vtkRenderer* renderer, vtkActor
     return;
     }
 
+    long time = this->GetPreviousRenderingForSelection();
+    if(time == 0)
+        time = this->BuildTime;
+    else
+      time = renderer->GetRenderTime();
+
   this->TimeToDraw = 0.0;
 
   // if something has changed regenrate display lists.
   if (!this->DisplayListId || 
-    this->GetMTime() > this->BuildTime ||
-    this->GetInput()->GetMTime() > this->BuildTime ||
-    actor->GetProperty()->GetMTime() > this->BuildTime ||
+    (this->GetMTime() > time && time == this->BuildTime) ||
+    this->GetInput()->GetMTime() > time ||
+    actor->GetProperty()->GetMTime() > time ||
     renderer->GetRenderWindow() != this->LastWindow.GetPointer() ||
-    this->Information->GetMTime() > this->BuildTime || 
+    //this->Information->GetMTime() > this->BuildTime || 
     this->LastUsedTypeFlags != typeflags)
     {
     this->ReleaseList();
@@ -96,11 +102,10 @@ void vtkOpenGLDisplayListPainter::RenderInternal(vtkRenderer* renderer, vtkActor
     // generate the display list.
     this->Superclass::RenderInternal(renderer, actor, typeflags);
     glEndList();
-
+    }
     this->BuildTime.Modified();
     this->LastWindow = renderer->GetRenderWindow();
     this->LastUsedTypeFlags = typeflags;
-    }
 
   // Time the actual drawing.
   this->Timer->StartTimer();
diff --git a/Rendering/vtkPainter.cxx b/Rendering/vtkPainter.cxx
index afc3e46..c3c10e4 100644
--- a/Rendering/vtkPainter.cxx
+++ b/Rendering/vtkPainter.cxx
@@ -83,6 +83,8 @@ vtkPainter::vtkPainter()
   this->SetInformation(temp);
   temp->Delete();
 
+  this->PreviousRenderingForSelection = 0;
+
   vtkPainter::STATIC_DATA()->Set(this->Information, 0);
   vtkPainter::CONSERVE_MEMORY()->Set(this->Information, 0);
   vtkPainter::HIGH_QUALITY()->Set(this->Information, 1);
@@ -209,6 +211,9 @@ void vtkPainter::Render(vtkRenderer* renderer, vtkActor* actor,
 
   this->PrepareForRendering(renderer, actor);
   this->RenderInternal(renderer, actor, typeflags);
+
+  // If the previous rendering selection information exist remove it
+  SetPreviousRenderingForSelection(0);
 }
 
 //-----------------------------------------------------------------------------
diff --git a/Rendering/vtkPainter.h b/Rendering/vtkPainter.h
index 69cbfe2..ac619c0 100644
--- a/Rendering/vtkPainter.h
+++ b/Rendering/vtkPainter.h
@@ -146,6 +146,21 @@ public:
   virtual vtkDataObject* GetOutput()
     { return this->Input; }
 
+  // Description:
+  // If you're making a selection rendering please add the TimeStamp time of the
+  // selection rendering.
+  // If the value is equal to zero then the previous rendering is not a selection rendering.
+  // If the value is different of zero then the previous rendering was a selection rendering.
+  void SetPreviousRenderingForSelection(int value)
+  {
+    this->PreviousRenderingForSelection = value;
+  }
+
+  int GetPreviousRenderingForSelection()
+  {
+    return this->PreviousRenderingForSelection;
+  }
+
 //BTX
 protected:
   vtkPainter();
@@ -223,6 +238,8 @@ protected:
 
   double TimeToDraw;
   vtkTimerLog* Timer;
+
+  int PreviousRenderingForSelection;
   
   vtkWeakPointer<vtkWindow> LastWindow; // Window used for previous render.
                          // This is not reference counted.
diff --git a/Rendering/vtkRenderer.cxx b/Rendering/vtkRenderer.cxx
index 642fa80..f51a0ad 100644
--- a/Rendering/vtkRenderer.cxx
+++ b/Rendering/vtkRenderer.cxx
@@ -1864,6 +1864,8 @@ void vtkRenderer::SwapOutSelectablePainter(
       {
       orig_mapper->SetPainter(orig_painter);
       orig_painter->UnRegister(this);
+      // Inform the painters that this rendering is a selection rendering
+      orig_painter->SetPreviousRenderingForSelection(orig_mapper->GetMTime());
       }
     }
   if (!orig_painter)
diff --git a/Rendering/vtkRenderer.h b/Rendering/vtkRenderer.h
index 1c94e2c..b9fcc9c 100644
--- a/Rendering/vtkRenderer.h
+++ b/Rendering/vtkRenderer.h
@@ -433,6 +433,8 @@ public:
   // Initial value is false.
   vtkGetMacro(LastRenderingUsedDepthPeeling,int);
   
+  vtkGetMacro(RenderTime,int);
+
 protected:
   vtkRenderer();
   ~vtkRenderer();
