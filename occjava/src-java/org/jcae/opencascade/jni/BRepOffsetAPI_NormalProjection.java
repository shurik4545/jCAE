/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.jcae.opencascade.jni;

public class BRepOffsetAPI_NormalProjection extends BRepBuilderAPI_MakeShape {
  private long swigCPtr;

  public BRepOffsetAPI_NormalProjection(long cPtr, boolean cMemoryOwn) {
    super(OccJavaJNI.BRepOffsetAPI_NormalProjection_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(BRepOffsetAPI_NormalProjection obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OccJavaJNI.delete_BRepOffsetAPI_NormalProjection(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public BRepOffsetAPI_NormalProjection() {
    this(OccJavaJNI.new_BRepOffsetAPI_NormalProjection__SWIG_0(), true);
  }

  public BRepOffsetAPI_NormalProjection(TopoDS_Shape S) {
    this(OccJavaJNI.new_BRepOffsetAPI_NormalProjection__SWIG_1(TopoDS_Shape.getCPtr(S), S), true);
  }

  public void Init(TopoDS_Shape S) {
    OccJavaJNI.BRepOffsetAPI_NormalProjection_Init(swigCPtr, this, TopoDS_Shape.getCPtr(S), S);
  }

  public void Add(TopoDS_Shape ToProj) {
    OccJavaJNI.BRepOffsetAPI_NormalProjection_Add(swigCPtr, this, TopoDS_Shape.getCPtr(ToProj), ToProj);
  }

  public void SetParams(double Tol3D, double Tol2D, GeomAbs_Shape InternalContinuity, int MaxDegree, int MaxSeg) {
    OccJavaJNI.BRepOffsetAPI_NormalProjection_SetParams(swigCPtr, this, Tol3D, Tol2D, InternalContinuity.swigValue(), MaxDegree, MaxSeg);
  }

  public void SetMaxDistance(double MaxDist) {
    OccJavaJNI.BRepOffsetAPI_NormalProjection_SetMaxDistance(swigCPtr, this, MaxDist);
  }

  public void SetLimit(boolean FaceBoundaries) {
    OccJavaJNI.BRepOffsetAPI_NormalProjection_SetLimit__SWIG_0(swigCPtr, this, FaceBoundaries);
  }

  public void SetLimit() {
    OccJavaJNI.BRepOffsetAPI_NormalProjection_SetLimit__SWIG_1(swigCPtr, this);
  }

  public void Compute3d(boolean With3d) {
    OccJavaJNI.BRepOffsetAPI_NormalProjection_Compute3d__SWIG_0(swigCPtr, this, With3d);
  }

  public void Compute3d() {
    OccJavaJNI.BRepOffsetAPI_NormalProjection_Compute3d__SWIG_1(swigCPtr, this);
  }

  public void Build() {
    OccJavaJNI.BRepOffsetAPI_NormalProjection_Build(swigCPtr, this);
  }

  public boolean IsDone() {
	return OccJavaJNI.BRepOffsetAPI_NormalProjection_IsDone(swigCPtr, this);
}

  public TopoDS_Shape Projection() {
    long cPtr = OccJavaJNI.BRepOffsetAPI_NormalProjection_Projection(swigCPtr, this);
    return (TopoDS_Shape)TopoDS_Shape.create(cPtr);
}

  public TopoDS_Shape Couple(TopoDS_Edge E) {
    long cPtr = OccJavaJNI.BRepOffsetAPI_NormalProjection_Couple(swigCPtr, this, TopoDS_Edge.getCPtr(E), E);
    return (TopoDS_Shape)TopoDS_Shape.create(cPtr);
}

  public TopoDS_Shape[] Generated(TopoDS_Shape S) {
	return TopoDS_Shape.cArrayWrap(OccJavaJNI.BRepOffsetAPI_NormalProjection_Generated(swigCPtr, this, TopoDS_Shape.getCPtr(S), S));
}

  public TopoDS_Shape Ancestor(TopoDS_Edge E) {
    long cPtr = OccJavaJNI.BRepOffsetAPI_NormalProjection_Ancestor(swigCPtr, this, TopoDS_Edge.getCPtr(E), E);
    return (TopoDS_Shape)TopoDS_Shape.create(cPtr);
}

}
