/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.jcae.opencascade.jni;

public class Geom_BezierCurve extends Geom_BoundedCurve {
  private long swigCPtr;

  public Geom_BezierCurve(long cPtr, boolean cMemoryOwn) {
    super(OccJavaJNI.Geom_BezierCurve_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(Geom_BezierCurve obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OccJavaJNI.delete_Geom_BezierCurve(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public Geom_BezierCurve(double[] CurvePoles) {
    this(OccJavaJNI.new_Geom_BezierCurve__SWIG_0(CurvePoles), true);
  }

  public Geom_BezierCurve(double[] CurvePoles, double[] PoleWeights) {
    this(OccJavaJNI.new_Geom_BezierCurve__SWIG_1(CurvePoles, PoleWeights), true);
  }

  public void Increase(int Degree) {
    OccJavaJNI.Geom_BezierCurve_Increase(swigCPtr, this, Degree);
  }

  public void InsertPoleAfter(int Index, double[] P) {
    OccJavaJNI.Geom_BezierCurve_InsertPoleAfter__SWIG_0(swigCPtr, this, Index, P);
  }

  public void InsertPoleAfter(int Index, double[] P, double Weight) {
    OccJavaJNI.Geom_BezierCurve_InsertPoleAfter__SWIG_1(swigCPtr, this, Index, P, Weight);
  }

  public void InsertPoleBefore(int Index, double[] P) {
    OccJavaJNI.Geom_BezierCurve_InsertPoleBefore__SWIG_0(swigCPtr, this, Index, P);
  }

  public void InsertPoleBefore(int Index, double[] P, double Weight) {
    OccJavaJNI.Geom_BezierCurve_InsertPoleBefore__SWIG_1(swigCPtr, this, Index, P, Weight);
  }

  public void RemovePole(int Index) {
    OccJavaJNI.Geom_BezierCurve_RemovePole(swigCPtr, this, Index);
  }

  public void Reverse() {
    OccJavaJNI.Geom_BezierCurve_Reverse(swigCPtr, this);
  }

  public double ReversedParameter(double U) {
    return OccJavaJNI.Geom_BezierCurve_ReversedParameter(swigCPtr, this, U);
  }

  public void Segment(double U1, double U2) {
    OccJavaJNI.Geom_BezierCurve_Segment(swigCPtr, this, U1, U2);
  }

  public void SetPole(int Index, double[] P) {
    OccJavaJNI.Geom_BezierCurve_SetPole__SWIG_0(swigCPtr, this, Index, P);
  }

  public void SetPole(int Index, double[] P, double Weight) {
    OccJavaJNI.Geom_BezierCurve_SetPole__SWIG_1(swigCPtr, this, Index, P, Weight);
  }

  public void SetWeight(int Index, double Weight) {
    OccJavaJNI.Geom_BezierCurve_SetWeight(swigCPtr, this, Index, Weight);
  }

  public boolean IsClosed() {
	return OccJavaJNI.Geom_BezierCurve_IsClosed(swigCPtr, this);
}

  public boolean IsCN(int N) {
	return OccJavaJNI.Geom_BezierCurve_IsCN(swigCPtr, this, N);
}

  public boolean IsPeriodic() {
	return OccJavaJNI.Geom_BezierCurve_IsPeriodic(swigCPtr, this);
}

  public boolean IsRational() {
	return OccJavaJNI.Geom_BezierCurve_IsRational(swigCPtr, this);
}

  public GeomAbs_Shape Continuity() {
    return GeomAbs_Shape.swigToEnum(OccJavaJNI.Geom_BezierCurve_Continuity(swigCPtr, this));
  }

  public int Degree() {
    return OccJavaJNI.Geom_BezierCurve_Degree(swigCPtr, this);
  }

  public void D0(double U, double[] P) {
    OccJavaJNI.Geom_BezierCurve_D0(swigCPtr, this, U, P);
  }

  public void D1(double U, double[] P, double[] V1) {
    OccJavaJNI.Geom_BezierCurve_D1(swigCPtr, this, U, P, V1);
  }

  public void D2(double U, double[] P, double[] V1, double[] V2) {
    OccJavaJNI.Geom_BezierCurve_D2(swigCPtr, this, U, P, V1, V2);
  }

  public void D3(double U, double[] P, double[] V1, double[] V2, double[] V3) {
    OccJavaJNI.Geom_BezierCurve_D3(swigCPtr, this, U, P, V1, V2, V3);
  }

  public double[] DN(double U, int N) {
	return OccJavaJNI.Geom_BezierCurve_DN(swigCPtr, this, U, N);
}

  public double[] StartPoint() {
	return OccJavaJNI.Geom_BezierCurve_StartPoint(swigCPtr, this);
}

  public double[] EndPoint() {
	return OccJavaJNI.Geom_BezierCurve_EndPoint(swigCPtr, this);
}

  public double FirstParameter() {
    return OccJavaJNI.Geom_BezierCurve_FirstParameter(swigCPtr, this);
  }

  public double LastParameter() {
    return OccJavaJNI.Geom_BezierCurve_LastParameter(swigCPtr, this);
  }

  public int NbPoles() {
    return OccJavaJNI.Geom_BezierCurve_NbPoles(swigCPtr, this);
  }

  public double[] Pole(int Index) {
	return OccJavaJNI.Geom_BezierCurve_Pole(swigCPtr, this, Index);
}

  public void Poles(double[] P) {
    OccJavaJNI.Geom_BezierCurve_Poles(swigCPtr, this, P);
  }

  public double Weight(int Index) {
    return OccJavaJNI.Geom_BezierCurve_Weight(swigCPtr, this, Index);
  }

  public void Weights(double[] W) {
    OccJavaJNI.Geom_BezierCurve_Weights(swigCPtr, this, W);
  }

  public void Transform(GP_Trsf T) {
    OccJavaJNI.Geom_BezierCurve_Transform(swigCPtr, this, GP_Trsf.getCPtr(T), T);
  }

  public int MaxDegree() {
    return OccJavaJNI.Geom_BezierCurve_MaxDegree(swigCPtr, this);
  }

  public void Resolution(double Tolerance3D, double[] UTolerance) {
    OccJavaJNI.Geom_BezierCurve_Resolution(swigCPtr, this, Tolerance3D, UTolerance);
  }

}
