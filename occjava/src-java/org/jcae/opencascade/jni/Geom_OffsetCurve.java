/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.jcae.opencascade.jni;

public class Geom_OffsetCurve extends Geom_Curve {
  private long swigCPtr;

  public Geom_OffsetCurve(long cPtr, boolean cMemoryOwn) {
    super(OccJavaJNI.Geom_OffsetCurve_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(Geom_OffsetCurve obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OccJavaJNI.delete_Geom_OffsetCurve(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public Geom_OffsetCurve(Geom_Curve C, double Offset, double[] V) {
    this(OccJavaJNI.new_Geom_OffsetCurve(Geom_Curve.getCPtr(C), C, Offset, V), true);
  }

  public void Reverse() {
    OccJavaJNI.Geom_OffsetCurve_Reverse(swigCPtr, this);
  }

  public double ReversedParameter(double U) {
    return OccJavaJNI.Geom_OffsetCurve_ReversedParameter(swigCPtr, this, U);
  }

  public void SetBasisCurve(Geom_Curve C) {
    OccJavaJNI.Geom_OffsetCurve_SetBasisCurve(swigCPtr, this, Geom_Curve.getCPtr(C), C);
  }

  public void SetDirection(double[] V) {
    OccJavaJNI.Geom_OffsetCurve_SetDirection(swigCPtr, this, V);
  }

  public void SetOffsetValue(double D) {
    OccJavaJNI.Geom_OffsetCurve_SetOffsetValue(swigCPtr, this, D);
  }

  public Geom_Curve BasisCurve() {
    return new Geom_Curve(OccJavaJNI.Geom_OffsetCurve_BasisCurve(swigCPtr, this), true);
  }

  public GeomAbs_Shape Continuity() {
    return GeomAbs_Shape.swigToEnum(OccJavaJNI.Geom_OffsetCurve_Continuity(swigCPtr, this));
  }

  public double[] Direction() {
	return OccJavaJNI.Geom_OffsetCurve_Direction(swigCPtr, this);
}

  public void D0(double U, double[] P) {
    OccJavaJNI.Geom_OffsetCurve_D0__SWIG_0(swigCPtr, this, U, P);
  }

  public void D1(double U, double[] P, double[] V1) {
    OccJavaJNI.Geom_OffsetCurve_D1__SWIG_0(swigCPtr, this, U, P, V1);
  }

  public void D2(double U, double[] P, double[] V1, double[] V2) {
    OccJavaJNI.Geom_OffsetCurve_D2__SWIG_0(swigCPtr, this, U, P, V1, V2);
  }

  public void D3(double U, double[] P, double[] V1, double[] V2, double[] V3) {
    OccJavaJNI.Geom_OffsetCurve_D3(swigCPtr, this, U, P, V1, V2, V3);
  }

  public double[] DN(double U, int N) {
	return OccJavaJNI.Geom_OffsetCurve_DN(swigCPtr, this, U, N);
}

  public void Value(double U, double[] P, double[] Pbasis, double[] V1basis) {
    OccJavaJNI.Geom_OffsetCurve_Value(swigCPtr, this, U, P, Pbasis, V1basis);
  }

  public void D0(double U, double[] P, double[] Pbasis, double[] V1basis) {
    OccJavaJNI.Geom_OffsetCurve_D0__SWIG_1(swigCPtr, this, U, P, Pbasis, V1basis);
  }

  public void D1(double U, double[] P, double[] Pbasis, double[] V1, double[] V1basis, double[] V2basis) {
    OccJavaJNI.Geom_OffsetCurve_D1__SWIG_1(swigCPtr, this, U, P, Pbasis, V1, V1basis, V2basis);
  }

  public void D2(double U, double[] P, double[] Pbasis, double[] V1, double[] V2, double[] V1basis, double[] V2basis, double[] V3basis) {
    OccJavaJNI.Geom_OffsetCurve_D2__SWIG_1(swigCPtr, this, U, P, Pbasis, V1, V2, V1basis, V2basis, V3basis);
  }

  public double FirstParameter() {
    return OccJavaJNI.Geom_OffsetCurve_FirstParameter(swigCPtr, this);
  }

  public double LastParameter() {
    return OccJavaJNI.Geom_OffsetCurve_LastParameter(swigCPtr, this);
  }

  public double Offset() {
    return OccJavaJNI.Geom_OffsetCurve_Offset(swigCPtr, this);
  }

  public boolean IsClosed() {
	return OccJavaJNI.Geom_OffsetCurve_IsClosed(swigCPtr, this);
}

  public boolean IsCN(int N) {
	return OccJavaJNI.Geom_OffsetCurve_IsCN(swigCPtr, this, N);
}

  public boolean IsPeriodic() {
	return OccJavaJNI.Geom_OffsetCurve_IsPeriodic(swigCPtr, this);
}

  public double Period() {
    return OccJavaJNI.Geom_OffsetCurve_Period(swigCPtr, this);
  }

  public void Transform(GP_Trsf T) {
    OccJavaJNI.Geom_OffsetCurve_Transform(swigCPtr, this, GP_Trsf.getCPtr(T), T);
  }

  public double TransformedParameter(double U, GP_Trsf T) {
    return OccJavaJNI.Geom_OffsetCurve_TransformedParameter(swigCPtr, this, U, GP_Trsf.getCPtr(T), T);
  }

  public double ParametricTransformation(GP_Trsf T) {
    return OccJavaJNI.Geom_OffsetCurve_ParametricTransformation(swigCPtr, this, GP_Trsf.getCPtr(T), T);
  }

}
