/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.jcae.opencascade.jni;

public class Geom_Ellipse extends Geom_Conic {
  private long swigCPtr;

  public Geom_Ellipse(long cPtr, boolean cMemoryOwn) {
    super(OccJavaJNI.Geom_Ellipse_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(Geom_Ellipse obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OccJavaJNI.delete_Geom_Ellipse(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public Geom_Ellipse(GP_Elips E) {
    this(OccJavaJNI.new_Geom_Ellipse__SWIG_0(GP_Elips.getCPtr(E), E), true);
  }

  public Geom_Ellipse(double[] A2, double MajorRadius, double MinorRadius) {
    this(OccJavaJNI.new_Geom_Ellipse__SWIG_1(A2, MajorRadius, MinorRadius), true);
  }

  public void SetElips(GP_Elips E) {
    OccJavaJNI.Geom_Ellipse_SetElips(swigCPtr, this, GP_Elips.getCPtr(E), E);
  }

  public void SetMajorRadius(double MajorRadius) {
    OccJavaJNI.Geom_Ellipse_SetMajorRadius(swigCPtr, this, MajorRadius);
  }

  public void SetMinorRadius(double MinorRadius) {
    OccJavaJNI.Geom_Ellipse_SetMinorRadius(swigCPtr, this, MinorRadius);
  }

  public GP_Elips Elips() {
    return new GP_Elips(OccJavaJNI.Geom_Ellipse_Elips(swigCPtr, this), true);
  }

  public double ReversedParameter(double U) {
    return OccJavaJNI.Geom_Ellipse_ReversedParameter(swigCPtr, this, U);
  }

  public double[] Directrix1() {
	return OccJavaJNI.Geom_Ellipse_Directrix1(swigCPtr, this);
}

  public double[] Directrix2() {
	return OccJavaJNI.Geom_Ellipse_Directrix2(swigCPtr, this);
}

  public double Eccentricity() {
    return OccJavaJNI.Geom_Ellipse_Eccentricity(swigCPtr, this);
  }

  public double Focal() {
    return OccJavaJNI.Geom_Ellipse_Focal(swigCPtr, this);
  }

  public double[] Focus1() {
	return OccJavaJNI.Geom_Ellipse_Focus1(swigCPtr, this);
}

  public double[] Focus2() {
	return OccJavaJNI.Geom_Ellipse_Focus2(swigCPtr, this);
}

  public double MajorRadius() {
    return OccJavaJNI.Geom_Ellipse_MajorRadius(swigCPtr, this);
  }

  public double MinorRadius() {
    return OccJavaJNI.Geom_Ellipse_MinorRadius(swigCPtr, this);
  }

  public double Parameter() {
    return OccJavaJNI.Geom_Ellipse_Parameter(swigCPtr, this);
  }

  public double FirstParameter() {
    return OccJavaJNI.Geom_Ellipse_FirstParameter(swigCPtr, this);
  }

  public double LastParameter() {
    return OccJavaJNI.Geom_Ellipse_LastParameter(swigCPtr, this);
  }

  public boolean IsClosed() {
	return OccJavaJNI.Geom_Ellipse_IsClosed(swigCPtr, this);
}

  public boolean IsPeriodic() {
	return OccJavaJNI.Geom_Ellipse_IsPeriodic(swigCPtr, this);
}

  public void D0(double U, double[] P) {
    OccJavaJNI.Geom_Ellipse_D0(swigCPtr, this, U, P);
  }

  public void D1(double U, double[] P, double[] V1) {
    OccJavaJNI.Geom_Ellipse_D1(swigCPtr, this, U, P, V1);
  }

  public void D2(double U, double[] P, double[] V1, double[] V2) {
    OccJavaJNI.Geom_Ellipse_D2(swigCPtr, this, U, P, V1, V2);
  }

  public void D3(double U, double[] P, double[] V1, double[] V2, double[] V3) {
    OccJavaJNI.Geom_Ellipse_D3(swigCPtr, this, U, P, V1, V2, V3);
  }

  public double[] DN(double U, int N) {
	return OccJavaJNI.Geom_Ellipse_DN(swigCPtr, this, U, N);
}

  public void Transform(GP_Trsf T) {
    OccJavaJNI.Geom_Ellipse_Transform(swigCPtr, this, GP_Trsf.getCPtr(T), T);
  }

}
