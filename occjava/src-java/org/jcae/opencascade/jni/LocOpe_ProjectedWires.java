/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.jcae.opencascade.jni;

public class LocOpe_ProjectedWires {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public LocOpe_ProjectedWires(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(LocOpe_ProjectedWires obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OccJavaJNI.delete_LocOpe_ProjectedWires(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void InitEdgeIterator() {
    OccJavaJNI.LocOpe_ProjectedWires_InitEdgeIterator(swigCPtr, this);
  }

  public boolean MoreEdge() {
	return OccJavaJNI.LocOpe_ProjectedWires_MoreEdge(swigCPtr, this);
}

  public TopoDS_Edge Edge() {
    return new TopoDS_Edge(OccJavaJNI.LocOpe_ProjectedWires_Edge(swigCPtr, this), true);
  }

  public TopoDS_Face OnFace() {
    return new TopoDS_Face(OccJavaJNI.LocOpe_ProjectedWires_OnFace(swigCPtr, this), true);
  }

  public boolean OnEdge(TopoDS_Edge E) {
	return OccJavaJNI.LocOpe_ProjectedWires_OnEdge__SWIG_0(swigCPtr, this, TopoDS_Edge.getCPtr(E), E);
}

  public void NextEdge() {
    OccJavaJNI.LocOpe_ProjectedWires_NextEdge(swigCPtr, this);
  }

  public boolean OnVertex(TopoDS_Vertex Vwire, TopoDS_Vertex Vshape) {
	return OccJavaJNI.LocOpe_ProjectedWires_OnVertex(swigCPtr, this, TopoDS_Vertex.getCPtr(Vwire), Vwire, TopoDS_Vertex.getCPtr(Vshape), Vshape);
}

  public boolean OnEdge(TopoDS_Vertex V, TopoDS_Edge E, double P) {
	return OccJavaJNI.LocOpe_ProjectedWires_OnEdge__SWIG_1(swigCPtr, this, TopoDS_Vertex.getCPtr(V), V, TopoDS_Edge.getCPtr(E), E, P);
}

}
