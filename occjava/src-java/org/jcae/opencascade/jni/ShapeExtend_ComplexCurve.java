/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.jcae.opencascade.jni;

public class ShapeExtend_ComplexCurve extends Geom_Curve {
  private long swigCPtr;

  public ShapeExtend_ComplexCurve(long cPtr, boolean cMemoryOwn) {
    super(OccJavaJNI.ShapeExtend_ComplexCurve_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(ShapeExtend_ComplexCurve obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OccJavaJNI.delete_ShapeExtend_ComplexCurve(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public int NbCurves() {
    return OccJavaJNI.ShapeExtend_ComplexCurve_NbCurves(swigCPtr, this);
  }

  public Geom_Curve Curve(int index) {
    return new Geom_Curve(OccJavaJNI.ShapeExtend_ComplexCurve_Curve(swigCPtr, this, index), false);
  }

  public int LocateParameter(double U, double[] UOut) {
    return OccJavaJNI.ShapeExtend_ComplexCurve_LocateParameter(swigCPtr, this, U, UOut);
  }

  public double LocalToGlobal(int index, double Ulocal) {
    return OccJavaJNI.ShapeExtend_ComplexCurve_LocalToGlobal(swigCPtr, this, index, Ulocal);
  }

  public void Transform(GP_Trsf T) {
    OccJavaJNI.ShapeExtend_ComplexCurve_Transform(swigCPtr, this, GP_Trsf.getCPtr(T), T);
  }

  public double ReversedParameter(double U) {
    return OccJavaJNI.ShapeExtend_ComplexCurve_ReversedParameter(swigCPtr, this, U);
  }

  public double FirstParameter() {
    return OccJavaJNI.ShapeExtend_ComplexCurve_FirstParameter(swigCPtr, this);
  }

  public double LastParameter() {
    return OccJavaJNI.ShapeExtend_ComplexCurve_LastParameter(swigCPtr, this);
  }

  public boolean IsClosed() {
	return OccJavaJNI.ShapeExtend_ComplexCurve_IsClosed(swigCPtr, this);
}

  public boolean IsPeriodic() {
	return OccJavaJNI.ShapeExtend_ComplexCurve_IsPeriodic(swigCPtr, this);
}

  public GeomAbs_Shape Continuity() {
    return GeomAbs_Shape.swigToEnum(OccJavaJNI.ShapeExtend_ComplexCurve_Continuity(swigCPtr, this));
  }

  public boolean IsCN(int N) {
	return OccJavaJNI.ShapeExtend_ComplexCurve_IsCN(swigCPtr, this, N);
}

  public void D0(double U, double[] P) {
    OccJavaJNI.ShapeExtend_ComplexCurve_D0(swigCPtr, this, U, P);
  }

  public void D1(double U, double[] P, double[] V1) {
    OccJavaJNI.ShapeExtend_ComplexCurve_D1(swigCPtr, this, U, P, V1);
  }

  public void D2(double U, double[] P, double[] V1, double[] V2) {
    OccJavaJNI.ShapeExtend_ComplexCurve_D2(swigCPtr, this, U, P, V1, V2);
  }

  public void D3(double U, double[] P, double[] V1, double[] V2, double[] V3) {
    OccJavaJNI.ShapeExtend_ComplexCurve_D3(swigCPtr, this, U, P, V1, V2, V3);
  }

  public double[] DN(double U, int N) {
	return OccJavaJNI.ShapeExtend_ComplexCurve_DN(swigCPtr, this, U, N);
}

  public double GetScaleFactor(int ind) {
    return OccJavaJNI.ShapeExtend_ComplexCurve_GetScaleFactor(swigCPtr, this, ind);
  }

  public boolean CheckConnectivity(double Preci) {
	return OccJavaJNI.ShapeExtend_ComplexCurve_CheckConnectivity(swigCPtr, this, Preci);
}

}
